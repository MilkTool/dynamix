if: tag IS blank # don't build tags
language: cpp
# temporary set sudo to true to work around travis-ci/travis-ci#9033
sudo: true
os: linux
compiler: gcc

notifications:
  email:
    on_success: change
    on_failure: always
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/d605a517fe78a18459bd
    on_success: change
    on_failure: always
    on_start: never
git:
  depth: 5
branches:
  except:
    - next

cache:
  directories:
    - .mtime_cache
    - debug_build
    - release_build
    - cc_debug
    - cc_release
    - static_debug
    - static_release

matrix:
  include:
    # GCC 5
    - env: COMPILER=g++-5
      compiler: gcc
      addons: &gcc5
        apt:
          packages: ["g++-5",     "valgrind"]
          sources: *apt_sources

    # Clang 4.0
    - env: COMPILER=clang++-4.0 ADDITIONAL_CXX_FLAGS="-g -fno-omit-frame-pointer -fsanitize=address,undefined"
      addons: &clang40
        apt:
          packages: ["clang-4.0", "valgrind"]
          sources: *apt_sources

    # Clang 4.0 - sanitize thread
    - env: COMPILER=clang++-4.0 ADDITIONAL_CXX_FLAGS="-g -fno-omit-frame-pointer -fsanitize=thread"
      addons: &clang50
        apt:
          packages: ["clang-4.0", "valgrind"]
          sources: *apt_sources

    # Xcode 11.2 Clang
    - env: COMPILER=clang++ ADDITIONAL_CXX_FLAGS="-g -fno-omit-frame-pointer -fsanitize=address,undefined"
      os: osx


before_script:
  - ${COMPILER} --version
  - cmake --version

script:
  # sanitizer options
  - export ASAN_OPTIONS=allow_addr2line=true:check_initialization_order=true:strict_init_order=true:strict_string_checks=true:detect_odr_violation=2:detect_stack_use_after_return=true:verbosity=0
  # prepare generated code for mutation performance test
  - cd perf/mutation_perf
  - ruby generate.rb
  - cd ../..
  # mtime_cache for faster builds
  - ruby tools/mtime_cache **/*.{%{cpp}} -c .mtime_cache/cache.json
  # build all in debug and release
  # run unit tests and performance tests
  - mkdir -p debug_build
  - cd debug_build
  - cmake -DCMAKE_CXX_COMPILER=$COMPILER .. -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="${ADDITIONAL_CXX_FLAGS} -fvisibility=hidden" -DDYNAMIX_BUILD_PERF=1
  - make -j2
  - ctest --output-on-failure
  - ./message_perf
  - ./mutation_perf
  - cd ..
  - mkdir -p release_build
  - cd release_build
  - cmake -DCMAKE_CXX_COMPILER=$COMPILER .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="${ADDITIONAL_CXX_FLAGS} -fvisibility=hidden" -DDYNAMIX_BUILD_PERF=1
  - make -j2
  - ctest --output-on_failure
  - ./message_perf --test-perf-regression
  - ./mutation_perf --test-perf-regression
  - cd ..
  # build and run only unit tests with a custom config file
  - mkdir -p cc_debug
  - cd cc_debug
  - cmake .. -DCMAKE_CXX_COMPILER=$COMPILER -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="${ADDITIONAL_CXX_FLAGS} -fno-rtti" -DDYNAMIX_BUILD_PERF=0 -DDYNAMIX_BUILD_EXAMPLES=0 -DDYNAMIX_BUILD_TUTORIALS=0 -DDYNAMIX_BUILD_SCRATCH=0 -DDYNAMIX_CUSTOM_CONFIG_FILE="\"$PWD/../test/custom_config/custom_config.hpp\""
  - make -j2
  - ctest --output-on_failure
  - cd ..
  - mkdir -p cc_release
  - cd cc_release
  - cmake .. -DCMAKE_CXX_COMPILER=$COMPILER -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="${ADDITIONAL_CXX_FLAGS} -fno-rtti" -DDYNAMIX_BUILD_PERF=0 -DDYNAMIX_BUILD_EXAMPLES=0 -DDYNAMIX_BUILD_TUTORIALS=0 -DDYNAMIX_BUILD_SCRATCH=0 -DDYNAMIX_CUSTOM_CONFIG_FILE="\"$PWD/../test/custom_config/custom_config.hpp\""
  - make -j2
  - ctest --output-on_failure
  - cd ..
  # build and run only unit tests with DynaMix as a static lib
  - mkdir -p static_debug
  - cd static_debug
  - cmake .. -DCMAKE_CXX_COMPILER=$COMPILER -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="${ADDITIONAL_CXX_FLAGS}" -DDYNAMIX_SHARED_LIB=0 -DDYNAMIX_BUILD_EXAMPLES=0 -DDYNAMIX_BUILD_TUTORIALS=0 -DDYNAMIX_BUILD_SCRATCH=0
  - make -j2
  - ctest --output-on_failure
  - cd ..
  - mkdir -p static_release
  - cd static_release
  - cmake .. -DCMAKE_CXX_COMPILER=$COMPILER -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="${ADDITIONAL_CXX_FLAGS}" -DDYNAMIX_SHARED_LIB=0 -DDYNAMIX_BUILD_EXAMPLES=0 -DDYNAMIX_BUILD_TUTORIALS=0 -DDYNAMIX_BUILD_SCRATCH=0
  - make -j2
  - ctest --output-on_failure
